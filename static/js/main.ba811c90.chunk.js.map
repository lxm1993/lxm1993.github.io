{"version":3,"sources":["pages/home/index.tsx","pages/gossip/index.tsx","reportWebVitals.js","components/PageHeader.tsx","assets/images/icon.png","components/PageSider.tsx","App.tsx","index.tsx","pages/article/SiderBar.tsx","pages/article/index.tsx","utils/util.ts","pages/me/config.ts","pages/me/index.tsx","config.ts","components/PostItem/TagList.tsx","components/PostItem/index.tsx","utils/fetch.ts","components/ArtList/index.tsx"],"names":["Home","className","githubRepo","config","githubTechnologyRepo","Gossip","githubGossipRepo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Layout","PageHeader","props","useState","hash","setHash","useEffect","hashChange","window","onhashchange","location","split","pathParts","href","repo","length","span","routes","map","item","i","hidden","key","to","path","name","Sider","size","src","avatar","thirdPartySites","onClick","open","title","Content","NotFond","status","subTitle","component","require","default","App","index","PageSider","route","exact","render","ReactDOM","locale","zhCN","document","getElementById","curAnchorname","changeRoute","directorys","level","style","marginLeft","Article","articleContent","setArticleContent","setCurAnchorname","paths","pathPartsLen","id","queryStr","asider","getElementsByClassName","display","fetchData","url","githubUserName","fetch","resp","json","issue","handleAnchor","htmlContent","tables","scrollToAnchor","decodeURIComponent","body","hex","opacity","marked","borderColor","labels","color","rgbaColor","parseInt","slice","replace","match","trim","forEach","_toc","setTimeout","styleSheets","insertRule","anchorname","history","pathname","anchorElement","scrollIntoView","behavior","block","created_at","SiderBar","substr","TagList","dangerouslySetInnerHTML","__html","html_url","favoritePoems","content","Me","hoverable","label","border","PostItem","postItem","date","fetchPostList","Promise","resolve","reject","data","Array","isArray","articleMap","filter","state","firstTag","tag","description","artList","unshift","number","substring","catch","e","ArtList","artListMap","setArtListMap","loading","setLoading","a","Object","keys","Item"],"mappings":"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","file":"static/js/main.ba811c90.chunk.js","sourcesContent":["import React from 'react';\nimport ArtList from '../../components/ArtList';\nimport { config } from \"../../config\";\n\nconst Home = () => {\n    return (\n        <div className=\"home-wraper\">\n            <ArtList githubRepo={config.githubTechnologyRepo} />\n        </div>\n    )\n};\n\n\nexport default Home;","import React from 'react';\nimport ArtList from '../../components/ArtList';\nimport { config } from \"../../config\";\n\nconst Gossip = () => {\n    return (\n        <div className=\"home-wraper\">\n            <ArtList githubRepo={config.githubGossipRepo} />\n        </div>\n    )\n};\n\n\nexport default Gossip;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../App'\n\nconst { Header } = Layout;\n\ninterface Props {\n    index: number\n}\n\nconst PageHeader = (props: Props) => {\n    const [hash, setHash] = useState('')\n    useEffect(() => {\n        hashChange();\n        window.onhashchange = () => { hashChange() }\n\n    })\n\n    const hashChange = () => {\n        const hash = window.location.hash.split('/')[1];\n        if(hash === 'article'){\n            const pathParts = window.location.href.split(\"/\");\n            const pathPartsLen = pathParts.length;\n            const repo = pathParts[pathPartsLen-2];\n            setHash(repo === 'gossip-blogs' ? 'gossip' : '');\n            return;\n        }\n        setHash(hash);\n    }\n    return (\n        < Header >\n            <Row className=\"header-wraper\">\n                <Col span={6} className=\"header-left\">\n                    <span className=\"header-title\">xiaomin‘s Blog</span>\n                    <span className=\"header-des\">welcome!</span>\n                </Col>\n                <Col span={12} className=\"header-center\">\n                    {routes.map((item: any, i) => {\n                        return !item.hidden\n                            ? (\n                                <div key={item.name} className={`header-menu ${hash === item.key ? 'menu-active' : ''}`}>\n                                    <Link to={item.path}>{item.name}</Link>\n                                </div>\n                            )\n                            : null;\n                    })}\n                </Col>\n                <Col span={6} className=\"header-right\">\n                    希望你的心里永远充满阳光～\n                </Col>\n            </Row>\n        </Header >\n    )\n};\n\n\nexport default PageHeader;","export default __webpack_public_path__ + \"static/media/icon.871055c2.png\";","import React from 'react';\nimport { Layout, Avatar} from 'antd';\nimport { config } from \"../config\";\nimport avatar from \"../assets/images/icon.png\";\n\nconst { Sider } = Layout;\n\ninterface Props {\n}\n\nconst PageHeader = (props: Props) => {\n    return (\n        <Sider className=\"page-sider-wraper\">\n            <Avatar size={64} src={avatar} />\n            <div className=\"autor-name\">xiaomin</div>\n            <p className=\"autor-des\">美团外卖@前端开发工程师</p>\n            <div className=\"author-site\">\n                {\n                    config.thirdPartySites.map((item : any) => {\n                        return (\n                            <div \n                                key={item.title}\n                                className=\"site-item\"\n                                onClick={()=>{\n                                    window.open(item.href);\n                                }}>\n                                {item.title}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Sider >\n    )\n};\n\n\nexport default PageHeader;","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Result } from 'antd';\nimport { Layout } from 'antd';\nimport PageHeader from './components/PageHeader'\nimport PageSider from './components/PageSider'\nconst { Content } = Layout;\n\ninterface routeInterface {\n  name: string;\n  path: string;\n  key: string;\n  component: any;\n  hidden?: boolean;\n  routes?: routeInterface[];\n}\n/** 404页面 */\nconst NotFond = () => {\n  return <Result status=\"404\" title=\"404\" subTitle=\"Sorry, the page you visited does not exist.\" />\n}\n\nexport const routes: routeInterface[] = [\n  {\n    name: '技术',\n    key: '',\n    path: \"/\", component: require('./pages/home/index').default,\n  },\n  {\n    name: '杂谈',\n    key: 'gossip',\n    path: \"/gossip\", component: require('./pages/gossip/index').default\n  },\n  {\n    name: '关于我',\n    key: 'me',\n    path: \"/me\", component: require('./pages/me/index').default\n  },\n  {\n    name: '文章详情',\n    key: '',\n    hidden: true,\n    path: \"/article/:repo/:id\", component: require('./pages/article/index').default\n  }\n]\n\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Layout>\n        <PageHeader index={0} />\n        <Layout>\n          <PageSider />\n          <Content className=\"page-content\">\n            <Switch>\n              {routes.map((route, i) => (\n                <Route\n                  exact\n                  key={i}\n                  path={route.path}\n                  render={props => (<route.component {...props} routes={route.routes} />)} />\n              ))}\n              <Route component={NotFond} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </HashRouter>\n\n  );\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n","import React from 'react';\n\ninterface Props {\n    changeRoute: Function;\n    curAnchorname: string;\n    directorys: {\n        level: number;\n        title: string;\n    }[];\n}\n\nconst PageHeader = (props: Props) => {\n    const { curAnchorname, changeRoute } = props;\n    return (\n        <aside className=\"article-asider-wraper\">\n            <h1>目录</h1>\n            {props.directorys.map(({ level, title }, index) => (\n                <a\n                    style={{ marginLeft: ((level - 1) * 5) }}\n                    key={index}\n                    className={`h${level} ${title === curAnchorname ? 'h-active' : ''}`}\n                    onClick={() => {\n                        changeRoute(title);\n                    }}>\n                    {title}\n                </a>\n            ))}\n        </aside>\n    )\n};\n\n\nexport default PageHeader;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Divider } from 'antd';\nimport { RouteComponentProps } from 'react-router';\nimport TagList from '../../components/PostItem/TagList';\nimport SiderBar from './SiderBar';\nimport marked from \"marked\";\nimport { config } from \"../../config\";\nimport { hexToRgba } from \"../../utils/util\";\nimport './index.scss';\n\ntype Props = RouteComponentProps;\n\nconst Article = (props: Props) => {\n\n    const [articleContent, setArticleContent] = useState<any>({});\n    const [curAnchorname, setCurAnchorname] = useState<string>('');\n\n    const paths = window.location.href.split(\"?\");\n    const pathParts = paths[0].split(\"/\");\n    const pathPartsLen = pathParts.length;\n    const id = pathParts[pathPartsLen - 1];\n    const repo = pathParts[pathPartsLen - 2];\n    const queryStr = paths[1];\n\n    useEffect(() => {\n        const asider: any = document.getElementsByClassName('page-sider-wraper')[0];\n        if(asider){\n            asider.style.display=\"none\";\n        }\n        fetchData();\n        return ()=>{\n            if(asider){\n                asider.style.display=\"inherit\";\n            }\n        }\n    }, []);\n\n    const fetchData = () => {\n        const url = `https://api.github.com/repos/${config.githubUserName}/${repo}/issues/${id}`;\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((issue) => {\n                const { htmlContent, tables } = handleAnchor(issue);\n                setArticleContent({\n                    ...issue,\n                    htmlContent,\n                    tables\n                })\n                if (queryStr) {\n                    scrollToAnchor(decodeURIComponent(queryStr.split(\"=\")[1]))\n                }\n            });\n    }\n\n    const handleAnchor = (issue: any) => {\n        if (!issue || !issue.body) {\n            return { htmlContent: '', tables: [] };\n        }\n        let htmlContent = marked(issue.body);\n        // 更改pre border 的颜色\n        const borderColor = `#${issue.labels && issue.labels[0] && issue.labels[0].color || '2f845e'}`;\n        const rgbaColor = hexToRgba(borderColor, 0.5)\n        htmlContent = htmlContent.replace(/<pre>/g, `<pre style=\"border-top: 6px solid ${rgbaColor};\">`)\n        htmlContent = htmlContent.replace(/<h1/g, `<h1 style=\"background: ${borderColor};\" `)\n        //匹配目录\n        const toc = issue.body.match(/#{1,6}\\s(.+)/g) || [];\n        const tables = toc.map((item: any) => ({\n            level: item.split(\"#\").length - 1,\n            title: item.replace(/#{1,6}/, \"\").trim(),\n        }));\n        //给html中的h加id\n        let tocHtml = htmlContent.match(/<(h\\d).*?>.*?<\\/h\\d>/g) || [];\n        tocHtml.forEach((item: any, index: number) => {\n            const _toc = `<div id='${(tables[index] || {}).title}'>${item} </div>`;\n            htmlContent = htmlContent.replace(item, _toc);\n        });\n        setTimeout(() => {\n            document.styleSheets[0].insertRule(`.article-content h1::after { content: \"red\";border-bottom: 3px solid ${borderColor}; }`, 0);\n        })\n        return { htmlContent, tables };\n    }\n\n    // 跳转到指定位置\n    const scrollToAnchor = (anchorname: any) => {\n        if (anchorname) {\n            setCurAnchorname(anchorname);\n            props.history.replace(`${props.location.pathname}?anchorname=${anchorname}`);\n            const anchorElement = document.getElementById(anchorname);\n            if (anchorElement) {\n                anchorElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n            }\n        }\n    }\n\n    if (!articleContent.created_at) {\n        return null;\n    }\n    return (\n        <Row className=\"article-wraper\">\n            <Col span={5}>\n                <SiderBar\n                    curAnchorname={curAnchorname}\n                    changeRoute={scrollToAnchor}\n                    directorys={articleContent.tables || []} />\n            </Col>\n            <Col span={19} className=\"article-content-wraper\">\n                <article>\n                    <h1 className=\"article-title\">{articleContent.title}</h1>\n                    <div className=\"article-time\">\n                        {articleContent.created_at && articleContent.created_at.substr(0, 10)}\n                        <TagList labels={articleContent.labels} />\n                    </div>\n                    <Divider />\n                    <div className=\"article-content\" dangerouslySetInnerHTML={{ __html: articleContent.htmlContent }} />\n                </article>\n                <div className=\"article-comment\"\n                    style={{\n                        color: `#${articleContent.labels && articleContent.labels[0] && articleContent.labels[0].color}`,\n                    }}\n                    onClick={() => {\n                        window.open(articleContent.html_url)\n                    }}>\n                    原文地址\n                </div>\n            </Col>\n        </Row>\n        // <div>\n\n        // </div>\n    )\n};\n\n\nexport default Article;","/**  将hex颜色转成rgb */\nexport const hexToRgba = (hex: string, opacity: number) => {\n    let rgba = \"rgba(\" + parseInt(\"0x\" + hex.slice(1, 3)) + \",\" + parseInt(\"0x\" + hex.slice(3, 5)) + \",\" + parseInt(\"0x\" + hex.slice(5, 7)) + \",\" + opacity + \")\";\n    return rgba;\n}","export const aboutMySelf = `\n    我，一个毕业六年的前端开发程序媛，土生土长的河南人</br>\n    没有什么特殊的喜好，只想好好地写代码</br>\n    厌恶勾心斗角、尔虞我诈</br>\n    一个并不是多么快乐的一个快乐的人～\n`\n\nexport const favoritePoems = [\n    {\n        title: '《从前慢》—木心',\n        content: `\n            记得早先少年时</br>\n            大家诚诚恳恳</br>\n            说一句 是一句</br>\n            </br>\n            清早上火车站</br>\n            长街黑暗无行人</br>\n            卖豆浆的小店冒着热气</br>\n            </br>\n            从前的日色变得慢</br>\n            车，马，邮件都慢</br>\n            一生只够爱一个人</br>\n            </br>\n            从前的锁也好看</br>\n            钥匙精美有样子</br>\n            你锁了 人家就懂了</br>\n        `\n    },\n    {\n        title: '《问佛》—仓央嘉措',\n        content: `\n            缘来天注定，缘去人自夺</br>\n            </br>\n            种如是因，收如是果，一切唯心造</br>\n            </br>\n            </br>\n            笑着面对,不去埋怨</br>\n            </br>\n            悠然,随心,随性,随缘</br>\n            </br>\n            注定让一生改变的</br>\n            </br>\n            只在百年后</br>\n            </br>\n            那一朵花开的时间</br>\n        `\n    },\n]","import React from 'react';\nimport { Row, Col, Card, Divider } from 'antd';\nimport { aboutMySelf, favoritePoems } from './config';\nimport './index.scss';\n\nconst Me = () => {\n    return (\n        <div className=\"my-wraper\">\n            <div className=\"one-item\">\n                <h1>关于我</h1>\n                <Divider />\n                <div className=\"about-me\" dangerouslySetInnerHTML={{ __html: aboutMySelf }} />\n            </div>\n            <div className=\"one-item\">\n                <h1>最喜欢的诗</h1>\n                <Divider />\n                <Row>\n                    {favoritePoems.map((item: any) => (\n                        <Col key={item.title} span={12}>\n                            <Card hoverable title={item.title} className=\"favorite-peom\">\n                                <div dangerouslySetInnerHTML={{ __html: item.content }} />\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Me;","export const config = {\n    // Your Github UserName\n    githubUserName: \"lxm1993\",\n    // 技术博客\n    githubTechnologyRepo: \"technology-blogs\",\n    // 杂谈\n    githubGossipRepo: \"gossip-blogs\",\n    thirdPartySites: [\n      {\n        href: \"1690326071@qq.com\", \n        title: \"1690326071@qq.com\",\n      },\n      {\n        href: \"https://github.com/lxm1993\",\n        title: \"GitHub\",\n      },\n      {\n        href: \"https://www.zhihu.com/people/lxm1993/posts\",\n        title: \"知乎@前端小小mi\",\n      },\n    ],\n  };\n  ","import React from \"react\";\n\nexport interface Label {\n  color: string;\n  name: string;\n}\ninterface Props {\n    labels: Label[];\n}\n\nconst TagList = (props: Props) => {\n  const { labels } = props;\n  return (\n    <>\n      {labels.map((label: Label) => {\n        return (\n          <span\n            key={label.name}\n            className=\"post-item-tag\"\n            style={{\n              color: `#${label.color}`,\n              border: `1px solid #${label.color}`,\n            }}\n          >\n            {label.name}\n          </span>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TagList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TagList, { Label } from './TagList';\nimport './index.scss';\n\ninterface Props {\n    githubRepo: string;\n    postItem: {\n        title: string;\n        id: number;\n        date: string;\n        labels: Label[];\n    };\n}\n\nconst PostItem = (props: Props) => {\n    const { githubRepo, postItem } = props;\n    return (\n        <div className=\"post-item-content\">\n            <Link className=\"post-item-title\" to={`/article/${githubRepo}/${postItem.id}`}>{`${postItem.title}`}</Link>\n            <div className=\"post-item-des\">\n                <span className=\"post-time\">{postItem.date}</span>\n                <TagList labels={postItem.labels}/>\n            </div>\n        </div>\n    )\n};\n\nexport default PostItem;","import { config } from \"../config\";\n\n/**\n * 获取文章列表\n * @param githubRepo \n * @returns \n */\nexport const fetchPostList = (githubRepo: string): any => {\n    return new Promise((resolve, reject) => {\n        const url = `https://api.github.com/repos/${config.githubUserName}/${githubRepo}/issues`;\n        fetch(url)\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((data) => {\n                if (!Array.isArray(data)) {\n                    resolve({})\n                    return;\n                }\n                const articleMap: any = {};\n\n                const posts = data\n                    .filter((item: any) => item.state === \"open\");\n                posts.forEach((item: any) => {\n                    const firstTag = item.labels && item.labels[0] || {};\n                    const tag = firstTag.name || '其他';\n                    if (!articleMap[tag]) {\n                        articleMap[tag] = {\n                            description: firstTag.description || '其他',\n                            color: firstTag.color,\n                            artList: [],\n                        };\n                    }\n                    articleMap[tag].artList.unshift({\n                        id: item.number,\n                        title: item.title,\n                        labels: item.labels,\n                        url: item.html_url,\n                        date: item.created_at.substring(0, 10),\n                    })\n                })\n                resolve(articleMap);\n            }).catch(e => {\n                reject(e)\n            });\n    })\n}","import React, { useEffect, useState } from 'react';\nimport { Divider, Timeline, Spin } from 'antd';\nimport PostItem from '../PostItem/index'\nimport { fetchPostList } from '../../utils/fetch';\nimport './index.scss';\n\ninterface artListMap {\n    [prop: string]: any;\n}\n\ninterface Props {\n    githubRepo: string;\n}\n\n\nconst ArtList = (props: Props) => {\n    const [artListMap, setArtListMap] = useState<artListMap>({});\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            let articleMap: artListMap = await fetchPostList(props.githubRepo);\n            setLoading(false);\n            setArtListMap(articleMap);\n        } catch (error) {\n            setLoading(false);\n        }\n    }\n    return (\n        <div className=\"artlist-wraper\">\n            {loading && <Spin />}\n            {\n                Object.keys(artListMap).map((label: string) => {\n                    const { color, description, artList } = artListMap[label];\n                    return (\n                        <div key={label}>\n                            <h1 className=\"catagory-title\">\n                                {label}<span className=\"catagory-description\">{description}</span>\n                            </h1>\n                            <Divider />\n                            <Timeline className=\"catagory-articles\">\n                                {\n                                    artList.map((postItem: any) => (\n                                        <Timeline.Item\n                                            key={postItem.id}\n                                            color={`#${color}`}>\n                                            <PostItem\n                                                githubRepo={props.githubRepo}\n                                                postItem={postItem} />\n                                        </Timeline.Item>\n                                    ))\n                                }\n                            </Timeline>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n};\n\n\nexport default ArtList;"],"sourceRoot":""}