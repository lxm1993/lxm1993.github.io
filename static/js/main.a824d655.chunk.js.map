{"version":3,"sources":["pages/category/index.tsx","pages/me/index.tsx","pages/article/index.tsx","reportWebVitals.js","index.tsx","components/PostItem.tsx","pages/home/index.tsx","components/PageHeader.tsx","components/PageSider.tsx","config.ts","App.tsx"],"names":["Content","Layout","Home","index","className","Article","props","id","window","location","href","split","pop","useState","articleContent","setArticleContent","useEffect","fetchData","url","config","githubUserName","githubRepo","fetch","then","resp","json","issue","handleAnchor","htmlContent","tables","body","marked","match","map","item","level","length","title","replace","trim","forEach","_toc","created_at","substr","dangerouslySetInnerHTML","__html","onClick","html_url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","locale","zhCN","App","document","getElementById","PageHeader","Sider","postItem","to","date","labels","label","color","name","artList","setArtList","loading","setLoading","data","Array","isArray","posts","filter","state","number","substring","PageSider","bordered","dataSource","emptyText","renderItem","i","Item","PostItem","Header","span","routes","hidden","path","size","icon","thirdPartySites","NotFond","status","subTitle","component","require","default","route","exact"],"mappings":"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","file":"static/js/main.a824d655.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, List } from 'antd';\nimport PageHeader from '../../components/PageHeader'\nimport PageSider from '../../components/PageSider'\n\nconst { Content } = Layout;\n\nconst Home = () => (\n    <Layout>\n        <PageHeader index={1}/>\n        <Layout>\n            <PageSider />\n            <Content className=\"page-content\">开发中</Content>\n        </Layout>\n    </Layout>\n);\n\n\nexport default Home;","import React from 'react';\nimport { Layout, List } from 'antd';\nimport PageHeader from '../../components/PageHeader'\nimport PageSider from '../../components/PageSider'\n\nconst { Content } = Layout;\n\nconst Home = () => (\n    <Layout>\n        <PageHeader index={2}/>\n        <Layout>\n            <PageSider />\n            <Content className=\"page-content\">开发中</Content>\n        </Layout>\n    </Layout>\n);\n\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { Layout, Divider } from 'antd';\nimport marked from \"marked\";\nimport PageHeader from '../../components/PageHeader'\nimport PageSider from '../../components/PageSider'\nimport { config } from \"../../config\";\n\nconst { Content } = Layout;\n\ninterface Props {\n}\n\nconst Article = (props: Props) => {\n    const path = window.location.href;\n    const id = path.split(\"/\").pop();\n\n    const [articleContent, setArticleContent] = useState<any>({});\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        const url = `https://api.github.com/repos/${config.githubUserName}/${config.githubRepo}/issues/${id}`;\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((issue) => {\n                const { htmlContent, tables } = handleAnchor(issue);\n                setArticleContent({\n                    ...issue,\n                    htmlContent,\n                    tables\n                })\n            });\n    }\n\n    const handleAnchor = (issue: any) => {\n        if (!issue || !issue.body) {\n            return { htmlContent: '', tables: [] };\n        }\n        let htmlContent = marked(issue.body);\n        //匹配目录\n        const toc = issue.body.match(/#{1,6}\\s(.+)/g) || [];\n        const tables = toc.map((item: any) => ({\n            level: item.split(\"#\").length - 1,\n            title: item.replace(/#{1,6}/, \"\").trim(),\n        }));\n        //给html中的h加id\n        let tocHtml = htmlContent.match(/<(h\\d).*?>.*?<\\/h\\d>/g) || [];\n        tocHtml.forEach((item: any, index: number) => {\n            const _toc = `<div id='${tables[index].title}'>${item} </div>`;\n            htmlContent = htmlContent.replace(item, _toc);\n        });\n        return { htmlContent, tables };\n    }\n\n    if (!articleContent.created_at) {\n        return null;\n    }\n    return (\n        <Layout>\n            <PageHeader index={0} />\n            <Layout>\n                <PageSider />\n                <Content className=\"page-content\">\n                    <article className=\"article-wraper\">\n                        <h1 className=\"article-title\">{articleContent.title}</h1>\n                        <div className=\"article-time\">{articleContent.created_at && articleContent.created_at.substr(0, 10)}</div>\n                        <Divider />\n                        <div className=\"article-content\" dangerouslySetInnerHTML={{ __html: articleContent.htmlContent }} />\n                    </article>\n                    <div className=\"article-comment\" onClick={() => (window.location.href = articleContent.html_url)}>\n                        原文地址\n                    </div>\n                </Content>\n            </Layout>\n        </Layout>\n    )\n};\n\n\nexport default Article;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n\n","import React from 'react';\nimport { Layout, Tag } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Sider } = Layout;\n\ninterface Label {\n    color: string;\n    name: string;\n}\ninterface Props {\n    postItem: {\n        title: string;\n        id: number;\n        date: string;\n        labels: Label[];\n    };\n}\n\nconst PageHeader = (props: Props) => {\n    const { postItem } = props;\n    return (\n        <div className=\"post-item-content\">\n            <Link className=\"post-item-title\" to={`/article/${postItem.id}`}>{`${postItem.title}`}</Link>\n            <div className=\"post-item-des\">\n                <span className=\"post-time\">{postItem.date}</span>\n                {\n                    postItem.labels.map((label: Label) => {\n                        return <Tag\n                            className=\"post-item-tag\"\n                            color=\"red\"\n                        >\n                            {label.name}</Tag>\n                    })\n                }\n            </div>\n        </div>\n    )\n};\n\n\nexport default PageHeader;","import React, { useEffect, useState } from 'react';\nimport { Layout, List, Spin } from 'antd';\nimport PageHeader from '../../components/PageHeader'\nimport PageSider from '../../components/PageSider'\nimport PostItem from '../../components/PostItem'\nimport { config } from \"../../config\";\n\n\n\nconst { Content } = Layout;\n\nconst Home = () => {\n    const [artList, setArtList] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        const url = `https://api.github.com/repos/${config.githubUserName}/${config.githubRepo}/issues`;\n        fetch(url)\n            .then((resp) => {\n                setLoading(false);\n                return resp.json();\n            })\n            .then((data) => {\n                setLoading(false);\n                if(!Array.isArray(data)){\n                    setArtList([]);\n                    return;\n                }\n                const posts = data\n                    .filter((item: any) => item.state === \"open\")\n                    .map((item: any) => {\n                        return {\n                            id: item.number,\n                            title: item.title,\n                            labels: item.labels,\n                            url: item.html_url,\n                            date: item.created_at.substring(0, 10),\n                        };\n                    });\n                setArtList(posts);\n            });\n    }\n    return (\n        <Layout>\n            <PageHeader index={0} />\n            <Layout>\n                <PageSider />\n                <Content className=\"page-content\">\n                    {loading && <Spin/>}\n                    <List\n                        bordered={false}\n                        dataSource={artList}\n                        locale={{emptyText: \"敬请期待哦....\"}}\n                        renderItem={(postItem: any, i: number) => (\n                            <List.Item>\n                                <PostItem postItem={postItem}/>\n                            </List.Item>\n                        )}\n                    />\n                </Content>\n            </Layout>\n        </Layout>\n    )\n};\n\n\nexport default Home;","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../App'\n\nconst { Header } = Layout;\n\ninterface Props {\n    index: number\n}\n\nconst PageHeader = (props: Props) => {\n    return (\n        < Header >\n            <Row className=\"header-wraper\">\n                <Col span={7} className=\"header-left\">\n                    <span className=\"header-title\">xiaomin‘s Blog</span>\n                    <span className=\"header-des\">welcome!</span>\n                </Col>\n                <Col span={17} className=\"header-right\">\n                    {\n                        routes.map((item: any, i) => {\n                            return !item.hidden\n                                ? (\n                                    <div className={`header-menu ${i === props.index ? 'menu-active' : ''}`}>\n                                        <Link to={item.path}>{item.name}</Link>\n                                    </div>\n                                )\n                                : null;\n                        })\n                    }\n                </Col>\n            </Row>\n        </Header >\n    )\n};\n\n\nexport default PageHeader;","import React from 'react';\nimport { Layout, Avatar} from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { config } from \"../config\";\n\n\nconst { Sider } = Layout;\n\ninterface Props {\n}\n\nconst PageHeader = (props: Props) => {\n    return (\n        <Sider className=\"page-sider-wraper\">\n            <Avatar size={64} icon={<UserOutlined />} />\n            <div className=\"autor-name\">刘晓敏</div>\n            <p className=\"autor-des\">美团外卖@前端开发工程师</p>\n            <div className=\"author-site\">\n                {\n                    config.thirdPartySites.map((item : any) => {\n                        return (\n                            <div \n                                className=\"site-item\"\n                                onClick={()=>{\n                                    window.location.href = item.href;\n                                }}>\n                                {item.title}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Sider >\n    )\n};\n\n\nexport default PageHeader;","export const config = {\n    // Your Github UserName\n    githubUserName: \"lxm1993\",\n    // Your Github Repo Name Where You Have your issues as Blog\n    githubRepo: \"lxm1993.github.io\",\n    // About Page links\n    thirdPartySites: [\n      {\n        href: \"mailto:kelyu0109@gmail.com\", // third Party Site url\n        title: \"kelyu0109@gmail.com\", //\n      },\n      {\n        href: \"https://github.com/kelyu0\",\n        title: \"GitHub\",\n      },\n      {\n        href: \"https://www.linkedin.com/in/ke-lyu-638bb8141/\",\n        title: \"Linkedin\",\n      },\n    ],\n  };\n  ","import React from 'react';\nimport { Result } from 'antd';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\ninterface routeInterface {\n    name: string;\n    path: string;\n    component: any;\n    hidden?: boolean;\n    routes?: routeInterface[];\n}\n/** 404页面 */\nconst NotFond = () => {\n    return <Result status=\"404\" title=\"404\" subTitle=\"Sorry, the page you visited does not exist.\" />\n}\n\nexport const routes: routeInterface[] = [\n    {\n        name: '首页',\n        path: \"/\", component: require('./pages/home/index').default,\n    },\n    {\n        name: '分类',\n        path: \"/category\", component: require('./pages/category/index').default\n    },\n    {\n        name: '我的',\n        path: \"/me\", component: require('./pages/me/index').default\n    },\n    {\n      name: '文章详情',\n      hidden: true,\n      path: \"/article/:id\", component: require('./pages/article/index').default\n  }\n]\n\nconst App: React.FC = () => {\n    return (\n        <HashRouter>\n            <Switch>\n\n                {routes.map((route, i) => (\n                    <Route\n                        exact\n                        key={i}\n                        path={route.path}\n                        render={props => (<route.component {...props} routes={route.routes} />)} />\n                ))}\n                <Route component={NotFond} />\n            </Switch>\n        </HashRouter>\n    );\n};\nexport default App;\n\n\n\n"],"sourceRoot":""}