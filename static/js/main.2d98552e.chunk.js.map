{"version":3,"sources":["pages/home/index.tsx","pages/gossip/index.tsx","pages/article/index.tsx","reportWebVitals.js","components/PageHeader.tsx","assets/images/icon.png","components/PageSider.tsx","App.tsx","index.tsx","pages/me/config.ts","pages/me/index.tsx","config.ts","components/PostItem/TagList.tsx","components/PostItem/index.tsx","utils/fetch.ts","components/ArtList/index.tsx"],"names":["Home","className","githubRepo","config","githubTechnologyRepo","Gossip","githubGossipRepo","Article","props","pathParts","window","location","href","split","pathPartsLen","length","id","repo","useState","articleContent","setArticleContent","useEffect","fetchData","url","githubUserName","fetch","then","resp","json","issue","handleAnchor","htmlContent","tables","body","marked","borderColor","labels","color","replace","match","map","item","level","title","trim","forEach","index","_toc","created_at","substr","dangerouslySetInnerHTML","__html","style","onClick","open","html_url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Layout","PageHeader","hash","setHash","hashChange","onhashchange","span","routes","i","hidden","key","to","path","name","Sider","size","src","avatar","thirdPartySites","Content","NotFond","status","subTitle","component","require","default","App","PageSider","route","exact","render","ReactDOM","locale","zhCN","document","getElementById","favoritePoems","content","Me","hoverable","TagList","label","border","PostItem","postItem","date","fetchPostList","Promise","resolve","reject","data","Array","isArray","articleMap","filter","state","firstTag","tag","description","artList","unshift","number","substring","catch","e","ArtList","artListMap","setArtListMap","loading","setLoading","a","Object","keys","Item"],"mappings":"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","file":"static/js/main.2d98552e.chunk.js","sourcesContent":["import React from 'react';\nimport ArtList from '../../components/ArtList';\nimport { config } from \"../../config\";\n\nconst Home = () => {\n    return (\n        <div className=\"home-wraper\">\n            <ArtList githubRepo={config.githubTechnologyRepo} />\n        </div>\n    )\n};\n\n\nexport default Home;","import React from 'react';\nimport ArtList from '../../components/ArtList';\nimport { config } from \"../../config\";\n\nconst Gossip = () => {\n    return (\n        <div className=\"home-wraper\">\n            <ArtList githubRepo={config.githubGossipRepo} />\n        </div>\n    )\n};\n\n\nexport default Gossip;","import React, { useState, useEffect } from 'react';\nimport { Divider } from 'antd';\nimport TagList from '../../components/PostItem/TagList';\nimport marked from \"marked\";\nimport { config } from \"../../config\";\nimport './index.scss';\n\ninterface Props {}\n\nconst Article = (props: Props) => {\n    const path = window.location.href;\n    const pathParts = path.split(\"/\");\n    const pathPartsLen = pathParts.length;\n    const id = pathParts[pathPartsLen-1];\n    const repo = pathParts[pathPartsLen-2];\n\n    const [articleContent, setArticleContent] = useState<any>({});\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        const url = `https://api.github.com/repos/${config.githubUserName}/${repo}/issues/${id}`;\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((issue) => {\n                const { htmlContent, tables } = handleAnchor(issue);\n                setArticleContent({\n                    ...issue,\n                    htmlContent,\n                    tables\n                })\n            });\n    }\n\n    const handleAnchor = (issue: any) => {\n        if (!issue || !issue.body) {\n            return { htmlContent: '', tables: [] };\n        }\n        let htmlContent = marked(issue.body);\n        // 更改pre border 的颜色\n        const borderColor = issue.labels && issue.labels[0] && issue.labels[0].color || '#2f845e';\n        htmlContent = htmlContent.replace(/<pre>/g, `<pre style=\"border-top: 6px solid #${borderColor};\">`)\n        // htmlContent = htmlContent.replace(/<strong>/g, `<strong style=\"color: #${borderColor};\">`)\n        //匹配目录\n        const toc = issue.body.match(/#{1,6}\\s(.+)/g) || [];\n        const tables = toc.map((item: any) => ({\n            level: item.split(\"#\").length - 1,\n            title: item.replace(/#{1,6}/, \"\").trim(),\n        }));\n        //给html中的h加id\n        let tocHtml = htmlContent.match(/<(h\\d).*?>.*?<\\/h\\d>/g) || [];\n        tocHtml.forEach((item: any, index: number) => {\n            const _toc = `<div id='${(tables[index] || {}).title}'>${item} </div>`;\n            htmlContent = htmlContent.replace(item, _toc);\n        });\n        return { htmlContent, tables };\n    }\n\n    if (!articleContent.created_at) {\n        return null;\n    }\n    return (\n        <div>\n            <article className=\"article-wraper\">\n                <h1 className=\"article-title\">{articleContent.title}</h1>\n                <div className=\"article-time\">\n                    {articleContent.created_at && articleContent.created_at.substr(0, 10)}\n                    <TagList labels={articleContent.labels} />\n                </div>\n                <Divider />\n                <div className=\"article-content\" dangerouslySetInnerHTML={{ __html: articleContent.htmlContent }} />\n            </article>\n            <div className=\"article-comment\"\n                style={{\n                    color: `#${articleContent.labels && articleContent.labels[0] && articleContent.labels[0].color}`,\n                }}\n                onClick={() => {\n                    window.open(articleContent.html_url)\n                }}>\n                原文地址\n            </div>\n        </div>\n    )\n};\n\n\nexport default Article;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../App'\n\nconst { Header } = Layout;\n\ninterface Props {\n    index: number\n}\n\nconst PageHeader = (props: Props) => {\n    const [hash, setHash] = useState('')\n    useEffect(() => {\n        hashChange();\n        window.onhashchange = () => { hashChange() }\n\n    })\n\n    const hashChange = () => {\n        const hash = window.location.hash.split('/')[1];\n        if(hash === 'article'){\n            const pathParts = window.location.href.split(\"/\");\n            const pathPartsLen = pathParts.length;\n            const repo = pathParts[pathPartsLen-2];\n            setHash(repo === 'gossip-blogs' ? 'gossip' : '');\n            return;\n        }\n        setHash(hash);\n    }\n    return (\n        < Header >\n            <Row className=\"header-wraper\">\n                <Col span={6} className=\"header-left\">\n                    <span className=\"header-title\">xiaomin‘s Blog</span>\n                    <span className=\"header-des\">welcome!</span>\n                </Col>\n                <Col span={12} className=\"header-center\">\n                    {routes.map((item: any, i) => {\n                        return !item.hidden\n                            ? (\n                                <div key={item.name} className={`header-menu ${hash === item.key ? 'menu-active' : ''}`}>\n                                    <Link to={item.path}>{item.name}</Link>\n                                </div>\n                            )\n                            : null;\n                    })}\n                </Col>\n                <Col span={6} className=\"header-right\">\n                    希望你的心里永远充满阳光～\n                </Col>\n            </Row>\n        </Header >\n    )\n};\n\n\nexport default PageHeader;","export default __webpack_public_path__ + \"static/media/icon.871055c2.png\";","import React from 'react';\nimport { Layout, Avatar} from 'antd';\nimport { config } from \"../config\";\nimport avatar from \"../assets/images/icon.png\";\n\nconst { Sider } = Layout;\n\ninterface Props {\n}\n\nconst PageHeader = (props: Props) => {\n    return (\n        <Sider className=\"page-sider-wraper\">\n            <Avatar size={64} src={avatar} />\n            <div className=\"autor-name\">刘晓敏</div>\n            <p className=\"autor-des\">美团外卖@前端开发工程师</p>\n            <div className=\"author-site\">\n                {\n                    config.thirdPartySites.map((item : any) => {\n                        return (\n                            <div \n                                key={item.title}\n                                className=\"site-item\"\n                                onClick={()=>{\n                                    window.open(item.href);\n                                }}>\n                                {item.title}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Sider >\n    )\n};\n\n\nexport default PageHeader;","import React from 'react';\nimport { Result } from 'antd';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport PageHeader from './components/PageHeader'\nimport PageSider from './components/PageSider'\nconst { Content } = Layout;\n\ninterface routeInterface {\n  name: string;\n  path: string;\n  key: string;\n  component: any;\n  hidden?: boolean;\n  routes?: routeInterface[];\n}\n/** 404页面 */\nconst NotFond = () => {\n  return <Result status=\"404\" title=\"404\" subTitle=\"Sorry, the page you visited does not exist.\" />\n}\n\nexport const routes: routeInterface[] = [\n  {\n    name: '技术',\n    key: '',\n    path: \"/\", component: require('./pages/home/index').default,\n  },\n  {\n      name: '杂谈',\n      key: 'gossip',\n      path: \"/gossip\", component: require('./pages/gossip/index').default\n  },\n  {\n      name: '关于我',\n      key: 'me',\n      path: \"/me\", component: require('./pages/me/index').default\n  },\n  {\n    name: '文章详情',\n    key: '',\n    hidden: true,\n    path: \"/article/:repo/:id\", component: require('./pages/article/index').default\n  }\n]\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Layout>\n        <PageHeader index={0} />\n        <Layout>\n          <PageSider />\n          <Content className=\"page-content\">\n            <Switch>\n              {routes.map((route, i) => (\n                <Route\n                  exact\n                  key={i}\n                  path={route.path}\n                  render={props => (<route.component {...props} routes={route.routes} />)} />\n              ))}\n              <Route component={NotFond} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </HashRouter>\n\n  );\n};\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n\n","export const aboutMySelf = `\n    我，一个毕业六年的前端开发程序媛，土生土长的河南人</br>\n    没有什么特殊的喜好，只想好好地写代码</br>\n    厌恶勾心斗角、尔虞我诈</br>\n    一个并不是多么快乐的一个快乐的人～\n`\n\nexport const favoritePoems = [\n    {\n        title: '《从前慢》—木心',\n        content: `\n            记得早先少年时</br>\n            大家诚诚恳恳</br>\n            说一句 是一句</br>\n            </br>\n            清早上火车站</br>\n            长街黑暗无行人</br>\n            卖豆浆的小店冒着热气</br>\n            </br>\n            从前的日色变得慢</br>\n            车，马，邮件都慢</br>\n            一生只够爱一个人</br>\n            </br>\n            从前的锁也好看</br>\n            钥匙精美有样子</br>\n            你锁了 人家就懂了</br>\n        `\n    },\n    {\n        title: '《问佛》—仓央嘉措',\n        content: `\n            缘来天注定，缘去人自夺</br>\n            </br>\n            种如是因，收如是果，一切唯心造</br>\n            </br>\n            </br>\n            笑着面对,不去埋怨</br>\n            </br>\n            悠然,随心,随性,随缘</br>\n            </br>\n            注定让一生改变的</br>\n            </br>\n            只在百年后</br>\n            </br>\n            那一朵花开的时间</br>\n        `\n    },\n]","import React from 'react';\nimport { Row, Col, Card, Divider } from 'antd';\nimport { aboutMySelf, favoritePoems } from './config';\nimport './index.scss';\n\nconst Me = () => {\n    return (\n        <div className=\"my-wraper\">\n            <div className=\"one-item\">\n                <h1>关于我</h1>\n                <Divider />\n                <div className=\"about-me\" dangerouslySetInnerHTML={{ __html: aboutMySelf }} />\n            </div>\n            <div className=\"one-item\">\n                <h1>最喜欢的诗</h1>\n                <Divider />\n                <Row>\n                    {favoritePoems.map((item: any) => (\n                        <Col key={item.title} span={12}>\n                            <Card hoverable title={item.title} className=\"favorite-peom\">\n                                <div dangerouslySetInnerHTML={{ __html: item.content }} />\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Me;","export const config = {\n    // Your Github UserName\n    githubUserName: \"lxm1993\",\n    // 技术博客\n    githubTechnologyRepo: \"technology-blogs\",\n    // 杂谈\n    githubGossipRepo: \"gossip-blogs\",\n    thirdPartySites: [\n      {\n        href: \"1690326071@qq.com\", \n        title: \"1690326071@qq.com\",\n      },\n      {\n        href: \"https://github.com/lxm1993\",\n        title: \"GitHub\",\n      },\n      {\n        href: \"https://www.zhihu.com/people/lxm1993/posts\",\n        title: \"知乎@前端小小mi\",\n      },\n    ],\n  };\n  ","import React from \"react\";\n\nexport interface Label {\n  color: string;\n  name: string;\n}\ninterface Props {\n    labels: Label[];\n}\n\nconst TagList = (props: Props) => {\n  const { labels } = props;\n  return (\n    <>\n      {labels.map((label: Label) => {\n        return (\n          <span\n            key={label.name}\n            className=\"post-item-tag\"\n            style={{\n              color: `#${label.color}`,\n              border: `1px solid #${label.color}`,\n            }}\n          >\n            {label.name}\n          </span>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TagList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TagList, { Label } from './TagList';\nimport './index.scss';\n\ninterface Props {\n    githubRepo: string;\n    postItem: {\n        title: string;\n        id: number;\n        date: string;\n        labels: Label[];\n    };\n}\n\nconst PostItem = (props: Props) => {\n    const { githubRepo, postItem } = props;\n    return (\n        <div className=\"post-item-content\">\n            <Link className=\"post-item-title\" to={`/article/${githubRepo}/${postItem.id}`}>{`${postItem.title}`}</Link>\n            <div className=\"post-item-des\">\n                <span className=\"post-time\">{postItem.date}</span>\n                <TagList labels={postItem.labels}/>\n            </div>\n        </div>\n    )\n};\n\nexport default PostItem;","import { config } from \"../config\";\n\n/**\n * 获取文章列表\n * @param githubRepo \n * @returns \n */\nexport const fetchPostList = (githubRepo: string): any => {\n    return new Promise((resolve, reject) => {\n        const url = `https://api.github.com/repos/${config.githubUserName}/${githubRepo}/issues`;\n        fetch(url)\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((data) => {\n                if (!Array.isArray(data)) {\n                    resolve({})\n                    return;\n                }\n                const articleMap: any = {};\n\n                const posts = data\n                    .filter((item: any) => item.state === \"open\");\n                posts.forEach((item: any) => {\n                    const firstTag = item.labels && item.labels[0] || {};\n                    const tag = firstTag.name || '其他';\n                    if (!articleMap[tag]) {\n                        articleMap[tag] = {\n                            description: firstTag.description || '其他',\n                            color: firstTag.color,\n                            artList: [],\n                        };\n                    }\n                    articleMap[tag].artList.unshift({\n                        id: item.number,\n                        title: item.title,\n                        labels: item.labels,\n                        url: item.html_url,\n                        date: item.created_at.substring(0, 10),\n                    })\n                })\n                resolve(articleMap);\n            }).catch(e => {\n                reject(e)\n            });\n    })\n}","import React, { useEffect, useState } from 'react';\nimport { Divider, Timeline, Spin } from 'antd';\nimport PostItem from '../PostItem/index'\nimport { fetchPostList } from '../../utils/fetch';\nimport './index.scss';\n\ninterface artListMap {\n    [prop: string]: any;\n}\n\ninterface Props {\n    githubRepo: string;\n}\n\n\nconst ArtList = (props: Props) => {\n    const [artListMap, setArtListMap] = useState<artListMap>({});\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            let articleMap: artListMap = await fetchPostList(props.githubRepo);\n            setLoading(false);\n            setArtListMap(articleMap);\n        } catch (error) {\n            setLoading(false);\n        }\n    }\n    return (\n        <div className=\"artlist-wraper\">\n            {loading && <Spin />}\n            {\n                Object.keys(artListMap).map((label: string) => {\n                    const { color, description, artList } = artListMap[label];\n                    return (\n                        <div key={label}>\n                            <h1 className=\"catagory-title\">\n                                {label}<span className=\"catagory-description\">{description}</span>\n                            </h1>\n                            <Divider />\n                            <Timeline className=\"catagory-articles\">\n                                {\n                                    artList.map((postItem: any) => (\n                                        <Timeline.Item\n                                            key={postItem.id}\n                                            color={`#${color}`}>\n                                            <PostItem\n                                                githubRepo={props.githubRepo}\n                                                postItem={postItem} />\n                                        </Timeline.Item>\n                                    ))\n                                }\n                            </Timeline>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n};\n\n\nexport default ArtList;"],"sourceRoot":""}